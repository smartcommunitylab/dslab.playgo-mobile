/**
 * Play&Go Project
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: info@smartcommunitylab.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { environment } from 'src/environments/environment';
import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';

import { PageNotification } from '../model/pageNotification';
import { UserSignature } from '../model/userSignature';

@Injectable({
  providedIn: 'root',
})
export class CommunicationAccountControllerService {
  constructor(private http: HttpClient) {}
  /**
   * getPlayerNotifications
   *
   * @param since since
   * @param skip skip
   * @param limit limit
   */
  public getPlayerNotificationsUsingGET(
    since?: number,
    skip?: number,
    limit?: number
  ): Observable<PageNotification> {
    return this.http.request<PageNotification>(
      'get',
      environment.serverUrl.api + `/playandgo/api/app/notifications`,
      {
        params: {
          since,
          skip,
          limit,
        },
      }
    );
  }

  /**
   * registerUserToPush
   *
   * @param body
   */
  public registerUserToPushUsingPOST(
    body?: UserSignature
  ): Observable<boolean> {
    return this.http.request<boolean>(
      'post',
      environment.serverUrl.api + `/playandgo/api/app/register`,
      {
        body,
      }
    );
  }
}
