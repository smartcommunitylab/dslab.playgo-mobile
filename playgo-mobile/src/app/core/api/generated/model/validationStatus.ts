/**
 * Play&Go Project
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: info@smartcommunitylab.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Interval } from './interval';

export interface ValidationStatus {
  accuracyRank?: number;
  averageSpeed?: number;
  certified?: boolean;
  coverageThreshold?: number;
  distance?: number;
  duration?: number;
  effectiveDistances?: { [key: string]: number };
  error?: ValidationStatus.ErrorEnum;
  intervals?: Array<Interval>;
  locations?: number;
  matchThreshold?: number;
  matchedIntervals?: number;
  maxSpeed?: number;
  modeType?: ValidationStatus.ModeTypeEnum;
  plannedDistances?: { [key: string]: number };
  polyline?: string;
  splitMinFastDurationThreshold?: number;
  splitSpeedThreshold?: number;
  splitStopTimeThreshold?: number;
  toCheck?: boolean;
  tripType?: ValidationStatus.TripTypeEnum;
  validationOutcome?: ValidationStatus.ValidationOutcomeEnum;
  validityThreshold?: number;
}
export namespace ValidationStatus {
  export type ErrorEnum =
    | 'DATA_HOLE'
    | 'DOES_NOT_MATCH'
    | 'NO_DATA'
    | 'OUT_OF_AREA'
    | 'SHARED_DOES_NOT_MATCH'
    | 'TOO_FAST'
    | 'TOO_SHORT'
    | 'TOO_SLOW';
  export const ErrorEnum = {
    DATAHOLE: 'DATA_HOLE' as ErrorEnum,
    DOESNOTMATCH: 'DOES_NOT_MATCH' as ErrorEnum,
    NODATA: 'NO_DATA' as ErrorEnum,
    OUTOFAREA: 'OUT_OF_AREA' as ErrorEnum,
    SHAREDDOESNOTMATCH: 'SHARED_DOES_NOT_MATCH' as ErrorEnum,
    TOOFAST: 'TOO_FAST' as ErrorEnum,
    TOOSHORT: 'TOO_SHORT' as ErrorEnum,
    TOOSLOW: 'TOO_SLOW' as ErrorEnum,
  };
  export type ModeTypeEnum =
    | 'bike'
    | 'boat'
    | 'bus'
    | 'car'
    | 'multi'
    | 'other'
    | 'train'
    | 'walk';
  export const ModeTypeEnum = {
    Bike: 'bike' as ModeTypeEnum,
    Boat: 'boat' as ModeTypeEnum,
    Bus: 'bus' as ModeTypeEnum,
    Car: 'car' as ModeTypeEnum,
    Multi: 'multi' as ModeTypeEnum,
    Other: 'other' as ModeTypeEnum,
    Train: 'train' as ModeTypeEnum,
    Walk: 'walk' as ModeTypeEnum,
  };
  export type TripTypeEnum = 'FREE' | 'PLANNED' | 'SHARED';
  export const TripTypeEnum = {
    FREE: 'FREE' as TripTypeEnum,
    PLANNED: 'PLANNED' as TripTypeEnum,
    SHARED: 'SHARED' as TripTypeEnum,
  };
  export type ValidationOutcomeEnum = 'INVALID' | 'PENDING' | 'VALID';
  export const ValidationOutcomeEnum = {
    INVALID: 'INVALID' as ValidationOutcomeEnum,
    PENDING: 'PENDING' as ValidationOutcomeEnum,
    VALID: 'VALID' as ValidationOutcomeEnum,
  };
}
