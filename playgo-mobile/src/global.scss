/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

html {
  // background-color: green !important;
}
.scanner-ui {
  display: none;
}
.scanner-hide {
  visibility: visible;
}

body.qr-scanner {
  background-color: transparent;
}

body.qr-scanner .scanner-ui {
  display: block;
}
body.qr-scanner .show-modal {
  visibility: hidden;
}
body.qr-scanner .scanner-hide {
  visibility: hidden;
}
ion-list {
  --ion-item-background: transparent;
}
.input-clear-icon.sc-ion-input-md,
.input-clear-icon.sc-ion-input-ios {
  background-image: url("data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><polygon fill='white' points='405,136.798 375.202,107 256,226.202 136.798,107 107,136.798 226.202,256 107,375.202 136.798,405 256,285.798 375.202,405 405,375.202 285.798,256'/></svg>") !important;
  width: 30px;
  height: 30px;
  background-size: 22px;
}
.modalConfirm {
  --background: var(--ion-color-playgo);
  color: white;
  .alert-message.sc-ion-alert-md,
  .alert-message.sc-ion-alert-ios,
  .alert-input-group.sc-ion-alert-md,
  .alert-input-group.sc-ion-alert-ios,
  .alert-title.sc-ion-alert-md,
  .alert-title.sc-ion-alert-ios {
    color: white;
  }
  .alert-button.sc-ion-alert-md,
  .alert-button.sc-ion-alert-ios {
    color: var(--ion-color-playgo);
    background-color: white;
  }
}
.app-segment {
  --background: var(--ion-color-playgo);
  color: white;
  .app-segment-button {
    --background: var(--ion-color-playgo);
    // --color: grey;
    --color-checked: white;
  }
}
.button-left-icon {
  width: 100%;
  text-align: left;
}
.error-message {
  color: red;
  font-size: 14px;
  margin-left: 10px;
  margin-top: 10px;
}
.icon-size-normal {
  font-size: 22px;
}

.app-alert {
  --background: var(--ion-color-playgo);

  .select-interface-option {
    --button-color: white;
    --button-color-hover: white;
    --color: white;
    --color-hover: white;
  }
  .alert-title,
  .select-interface-option .alert-radio-label,
  .select-interface-option .alert-checkbox-label,
  .select-interface-option[aria-checked="true"] .alert-radio-label,
  .select-interface-option[aria-checked="true"] .alert-checkbox-label {
    color: white;
  }
  [aria-checked="true"].sc-ion-alert-md .alert-radio-icon {
    border-color: white;
  }
  .alert-radio-inner {
    background-color: white;
  }
  .alert-radio-icon {
    border-color: white;
  }
  .alert-button {
    color: white;
  }
}

@import "material-icons/iconfont/material-icons.scss";

$material-icons-font-path: "./" !default;
$material-icons-font-size: 24px !default;
$material-icons-font-display: block !default;
